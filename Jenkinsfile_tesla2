node{
    def mavenHome = tool name: 'maven3.8.6'
    stage('1cloneCode'){
     git "https://github.com/tyanfe/maven-web-application"
    //sh "git clone https://github.com/tyanfe/maven-web-application" 
    //bat "git clone https://github.com/tyanfe/maven-web-application"     
    }


    stage('2Test&Build'){
        sh "${mavenHome}/bin/mvn clean package"
        //bat "${mavenHome}/bin/mvn clean package"
    }
    stage('3codeQuality'){
        sh "${mavenHome}/bin/mvn clean sonar:sonar"
    }
    stage('4uploadArtifacts'){
        sh "${mavenHome}/bin/mvn deploy"
    }
    stage('5deploy2UAT'){
        sh "echo 'deploy to UAT' "
        deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://35.183.4.204:8177/')], contextPath: null, war: 'target/*war'
    }
    stage('6approvalGate'){
        sh "echo 'ready for review' "
        timeout(time:5, unit:'DAYS') {
            input message: 'Application ready for deployment, Please review and approve'}
    }
    stage('7deploy2Prod'){
        sh "sleep 30"
        deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://35.183.4.204:8177/')], contextPath: null, war: 'target/*war'
    }
    stage('8emailNotification'){
        emailext body: '''Hi All,

Check build status
Landmark Technologies''', recipientProviders: [buildUser(), developers(), upstreamDevelopers(), brokenBuildSuspects()], subject: 'build status', to: 'tesla-app@gmail.com'
    }
}
